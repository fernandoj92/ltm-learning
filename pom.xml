<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>res.ferjorosa</groupId>
    <artifactId>ltm-learning</artifactId>
    <name>Ltm Learning</name>
    <version>0.1.0</version> <!-- The 0.2.0 version would be released when all the known bugs are fixed -->

    <packaging>pom</packaging>

    <url>https://github.com/fernandoj92/ltm-learning</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Fernando J. Rodríguez Sánchez</name>
            <email>fernandoj92@gmail.com</email>
            <organization>Madrid, Spain</organization>
            <organizationUrl>https://github.com/fernandoj92</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com/fernandoj92/ltm-learning.git</connection>
        <developerConnection>scm:git:github.com/fernandoj92/ltm-learning.git</developerConnection>
        <url>git@github.com/fernandoj92/ltm-learning.git</url>
    </scm>

    <!-- Thanks to the AMIDST team for this distribution approach -->
    <repositories>
        <repository>
            <id>amidstRepo</id>
            <url>https://raw.github.com/amidst/toolbox/mvn-repo/</url>
        </repository>
    </repositories>

    <dependencies>

        <!-- AMIDST dependency -->
        <dependency>
            <groupId>eu.amidst</groupId>
            <artifactId>module-all</artifactId>
            <version>0.5.2</version>
            <scope>compile</scope>
        </dependency>

        <!-- JSON dependency -->
        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.7</version>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <!-- Maven compiler plugin -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!-- maven-deploy plugin -->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- Thanks to the AMIDST team for this distribution approach -->
    <distributionManagement>
        <repository>
            <id>internal.repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>

</project>